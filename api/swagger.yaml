swagger: '2.0'
info:
  description: This is Chiappetta-Gulli-Marabelli e-Commerce Bookstore
  version: 1.0.0
  title: e-Commerce Bookstore - Local
host: 'localhost:8080'
basePath: /api
tags:
  - name: book
    description: Operations about books
  - name: author
    description: Operations about authors
  - name: user
    description: Operations about users
  - name: event
    description: Operations about events
schemes:
  - http
  
paths:

  # MARK: - Books

  '/books':
  
    get:
      tags:
        - book
      summary: Returns the Books
      operationId: getBooks
      description: By passing in the appropriate options, you can search for available
        inventory in the system
      produces:
        - application/json
      parameters:
        - name: ISBN
          in: query
          description: Pass an optional search string for looking up books
          required: false
          type: string
        - name: author
          in: query
          description: Pass an optional search string for looking up books
          required: false
          type: string
        - name: title
          in: query
          description: Pass an optional search string for looking up books
          required: false
          type: string
        - name: release_date
          in: query
          description: Pass an optional search string for looking up books
          required: false
          type: string
          format: date
        - name: genre
          in: query
          description: Genre
          required: false
          type: string
        - name: theme
          in: query
          description: Theme
          required: false
          type: string
        - name: order_type
          in: query
          description: Pass an optional order in which receive the list of books (default
            is alphabetic)
          required: false
          type: string
        - name: page
          in: query
          description: Number of the page
          type: integer
          format: int32
          minimum: 1
        - name: limit
          in: query
          description: Maximum number of records to return in a single page
          type: integer
          format: int32
          minimum: 0
      responses:
        '200':
          description: Search results matching criteria
          schema:
            type: array
            items:
              $ref: '#/definitions/Book'
        '400':
          description: bad input parameter
      x-swagger-router-controller: Book
      
    post:
      tags:
        - book
      summary: Adds a book
      operationId: addBook
      description: Adds a book to the system
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Book
          in: body
          description: a book
          schema:
            $ref: '#/definitions/Book'
      responses:
        '201':
          description: item created
        '400':
          description: 'invalid input, object invalid'
        '403':
          description: Operation not allowed
        '409':
          description: an item already exists
      x-swagger-router-controller: Book
      
  '/books/{ISBN}':
  
    put:
      tags:
        - book
      summary: Update a book
      operationId: updateBook
      description: Update a book in the system
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: ISBN
          type: string
          required: true
          description: ISBN of the book we want to update
        - in: body
          name: Book
          description: a book updated
          schema:
            $ref: '#/definitions/Book'
      responses:
        '200':
          description: item updated
        '400':
          description: 'invalid input, object invalid'
        '403':
          description: Operation not allowed
        '404':
          description: item not found
      x-swagger-router-controller: Book
      
    delete:
      tags:
        - book
      summary: Delete a book
      operationId: deleteBook
      description: Delete a book in the system
      parameters:
        - name: ISBN
          in: path
          type: string
          required: true
          description: ISBN of the book we want to delete
      responses:
        '200':
          description: item deleted
        '400':
          description: 'invalid input, book doesn''t exist'
        '403':
          description: Operation not allowed
        '404':
          description: item not found
      x-swagger-router-controller: Book
      
  '/books/{ISBN}/authors':
    get:
      tags:
        - book
      summary: Return the authors of the book
      description: Return the authors of the book
      operationId: getBookAuthors
      parameters:
        - name: ISBN
          in: path
          type: string
          required: true
          description: ISBN of the book
      responses:
        '200':
          description: Authors of the book
          schema:
            type: array
            items:
              $ref: '#/definitions/Author'
        '400':
          description: invalid input
        '404':
          description: item not found
      x-swagger-router-controller: Book
      
  '/books/{ISBN}/similarTo':
    get:
      tags:
        - book
      summary: Returns all the book similar to a book
      description: Returns all the book similar to the book with the ISBN passed
      operationId: similarTo
      produces:
        - application/json
      parameters:
        - name: ISBN
          in: path
          type: string
          required: true
          description: ISBN of the book we want to find similar books
        - name: page
          in: query
          description: Number of the page
          type: integer
          format: int32
          minimum: 1
        - name: limit
          in: query
          description: Maximum number of records to return in a single page
          type: integer
          format: int32
          minimum: 0
      responses:
        '200':
          description: Search similar books
          schema:
            type: array
            items:
              $ref: '#/definitions/Book'
        '400':
          description: invalid input
        '404':
          description: item not found
      x-swagger-router-controller: Book
      
  '/books/{ISBN}/reviews':
    get:
      tags:
        - book
      summary: Returns all reviews for the book
      description: Returns all reviews for the book with the ISBN passed
      operationId: getReviews
      produces:
        - application/json
      parameters:
        - name: ISBN
          in: path
          type: string
          required: true
          description: ISBN of the book we want to get Reviews
        - name: page
          in: query
          description: Number of the page
          type: integer
          format: int32
          minimum: 1
        - name: limit
          in: query
          description: Maximum number of records to return in a single page
          type: integer
          format: int32
          minimum: 0
      responses:
        '200':
          description: Search reviews
          schema:
            type: array
            items:
              $ref: '#/definitions/Review'
        '400':
          description: invalid input
        '404':
          description: item not found
      x-swagger-router-controller: Book
      
  '/books/reviews':
    post:
      tags:
        - book
      summary: Post a review
      operationId: postReview
      description: Post a review to the system
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Review
          in: body
          description: a Review
          schema:
            $ref: '#/definitions/Review'
      responses:
        '201':
          description: item created
        '400':
          description: 'invalid input, object invalid'
        '404':
          description: item not found
      x-swagger-router-controller: Book
      
  '/books/reviews/{ID}':
    delete:
      tags:
        - book
      summary: Delete a review
      operationId: deleteReview
      description: Delete a review from the system
      parameters:
        - name: ID
          in: path
          type: string
          required: true
      responses:
        '201':
          description: item deleted
        '400':
          description: 'invalid input, object invalid'
        '404':
          description: user not found
      x-swagger-router-controller: Book
    
  '/books/genres':
    get:
      tags:
        - book
      summary: Get list of genres
      operationId: getGenres
      description: Get list of genres
      responses:
        '200':
          description: Genres list
          schema:
            type: array
            items:
              type: string
        '400':
          description: invalid input
      x-swagger-router-controller: Book
    
  '/books/themes':
    get:
      tags:
        - book
      summary: Get list of themes
      operationId: getThemes
      description: Get list of themes
      responses:
        '200':
          description: Themes list
          schema:
            type: array
            items:
              type: string
        '400':
          description: invalid input
      x-swagger-router-controller: Book
      
  '/books/favouriteReadings':
    get:
      tags:
        - book
      summary: Get a list of favourite readings
      operationId: getFavouriteReadings
      description: All the books ordered according to their presence in users' shopping bags
      responses:
        '200':
          description: Favourite readings
          schema:
            type: array
            items:
              $ref: '#/definitions/Book'
        '400':
          description: invalid input
      x-swagger-router-controller: Book
      
  '/books/bestSellers':
    get:
      tags:
        - book
      summary: Get a list of best sellers
      operationId: getBestSellers
      description: All the books ordered according to their number of sold copies (i.e. times posted in a shopping bag)
      responses:
        '200':
          description: Favourite readings
          schema:
            type: array
            items:
              $ref: '#/definitions/Book'
        '400':
          description: invalid input
      x-swagger-router-controller: Book
        
    
  # MARK: - Authors  
    
  '/authors':
  
    get:
      tags:
        - author
      summary: Returns the Authors
      operationId: getAuthors
      description: Return the Authors
      produces:
        - application/json
      parameters:
        - name: bookISBN
          in: query
          description: Pass the ISBN of the book for looking up authors
          required: false
          type: string
        - name: ID
          in: query
          description: Pass an optional search string for looking up authors
          required: false
          type: string
        - name: name
          in: query
          description: Pass an optional search string for looking up authors
          required: false
          type: string
        - name: last_name
          in: query
          description: Pass an optional search string for looking up authors
          required: false
          type: string
        - name: page
          in: query
          description: Number of the page
          type: integer
          format: int32
          minimum: 1
        - name: limit
          in: query
          description: Maximum number of records to return in a single page
          type: integer
          format: int32
          minimum: 0
      responses:
        '200':
          description: Search results
          schema:
            type: array
            items:
              $ref: '#/definitions/Author'
        '400':
          description: bad input parameter
      x-swagger-router-controller: Author
      
    post:
      tags:
        - author
      summary: adds a new author
      operationId: addAuthor
      description: Adds a new Author
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Author
          in: body
          description: an author
          schema:
            $ref: '#/definitions/Author'
      responses:
        '201':
          description: item created
        '400':
          description: 'invalid input, object invalid'
        '403':
          description: Operation not allowed
        '409':
          description: an existing item already exists
      x-swagger-router-controller: Author
  
  '/authors/{ID}':    
  
    put:
      tags:
        - author
      summary: update an author
      operationId: updateAuthor
      description: Update author checking which field is different
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ID
          in: path
          type: string
          required: true
          description: ID of the author
        - name: Author
          in: body
          description: an Author updated
          schema:
            $ref: '#/definitions/Author'
      responses:
        '201':
          description: user updated
        '400':
          description: 'invalid input, object invalid'
        '403':
          description: Operation not allowed
        '404':
          description: author not found
      x-swagger-router-controller: Author
      
    delete:
      tags:
        - author
      summary: delete an author
      operationId: deleteAuthor
      description: Delete an author from the system
      parameters:
        - name: ID
          in: path
          type: string
          required: true
      responses:
        '201':
          description: item deleted
        '400':
          description: 'invalid input, object invalid'
        '403':
          description: Operation not allowed
        '404':
          description: author not found
    x-swagger-router-controller: Author
    
  '/authors/{ID}/books':
    get:
      tags:
        - author
      summary: Return the books of the author
      description: Return the books of the authors
      operationId: getAuthorBooks
      parameters:
        - name: ID
          in: path
          type: string
          required: true
          description: ID of the author
      responses:
        '200':
          description: Books of the author
          schema:
            type: array
            items:
              $ref: '#/definitions/Book'
        '400':
          description: invalid input
        '404':
          description: item not found
      x-swagger-router-controller: Author
    
  # MARK: - Users
      
  '/user/login':
    post:
      tags:
        - user
      summary: Login
      description: Login with a form
      operationId: userLogin
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: email
          in: formData
          required: true
          type: string
        - name: password
          in: formData
          required: true
          type: string
      responses:
        '200':
          description: User logged in
        '401':
          description: Wrong credentials
        '404':
          description: User not found
      x-swagger-router-controller: User
      
  '/user/logout':
    post:
      tags:
        - user
      summary: Logout
      description: Removes user session data
      operationId: userLogout
      produces:
        - application/json
      responses:
        '200':
          description: User logged out
      x-swagger-router-controller: User
    
  '/user':
    post:
      tags:
        - user
      summary: Adds a new user / registration
      operationId: addUser
      description: Adds a new user / registration
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: User
          in: body
          description: a user
          schema:
            $ref: '#/definitions/User'
      responses:
        '201':
          description: item created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      x-swagger-router-controller: User
  
    get:
      tags:
        - user
      summary: Returns the personal info of the logged user
      description: Returns the personal info of the logged user
      operationId: getInfo
      produces:
        - application/json
      responses:
        '200':
          description: Search info
          schema:
            type: object
            items:
              $ref: '#/definitions/User'
        '400':
          description: invalid input
        '404':
          description: user not found
      x-swagger-router-controller: User
      
    put:
      tags:
        - user
      summary: Update information about the currently logged user
      description: Update information about the currently logged user
      operationId: updateUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: User
          in: body
          description: a User updated
          schema:
            $ref: '#/definitions/User'
      responses:
        '201':
          description: user updated
        '400':
          description: 'invalid input, object invalid'
        '404':
          description: user not found
      x-swagger-router-controller: User
      
    delete:
      tags:
        - user
      summary: Delete the currently logged user
      description: Delete the currently logged user
      operationId: deleteUser
      responses:
        '201':
          description: item deleted
        '400':
          description: 'invalid input, user doesn''t exist'
        '404':
          description: user not found
    x-swagger-router-controller: User
      
  '/user/shoppingBag':
  
    get:
      tags:
        - user
      summary: Returns the books in the user's shopping bag
      description: Returns the books in the user's shopping bag
      operationId: getShoppingBag
      produces:
        - application/json
      parameters:
        - name: page
          in: query
          description: Number of the page
          type: integer
          format: int32
          minimum: 1
        - name: limit
          in: query
          description: Maximum number of records to return in a single page
          type: integer
          format: int32
          minimum: 0
      responses:
        '200':
          description: search results matching criteria
          schema:
            type: array
            items:
              $ref: '#/definitions/Book'
        '400':
          description: bad input parameter
        '404':
          description: item not found
      x-swagger-router-controller: User
      
    post:
      tags:
        - user
      summary: Adds a book in the user's shopping bag
      operationId: addToShoppingBag
      description: Adds a book in the user's shopping bag with the specified quantity
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: item
          in: body
          description: a Shopping Bag item
          schema:
            $ref: '#/definitions/ShoppingBag'
      responses:
        '201':
          description: New shopping bag item
        '400':
          description: 'invalid input, object invalid'
        '404':
          description: item not found
      x-swagger-router-controller: User
      
  '/user/shoppingBag/{ISBN}':
  
    put:
      tags:
        - user
      summary: Update a shopping bag item
      operationId: updateShoppingBag
      description: Update a shopping bag item
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ISBN
          in: path
          description: Book ISBN
          required: true
          type: string
        - name: item
          in: body
          description: a Shopping Bag item
          schema:
            $ref: '#/definitions/ShoppingBag'
      responses:
        '200':
          description: Shopping bag updated
        '400':
          description: 'invalid input, object invalid'
        '404':
          description: item not found
      x-swagger-router-controller: User
      
    delete:
      tags:
        - user
      summary: Remove item from user's shopping bag
      operationId: deleteFromShoppingBag
      description: Remove item from user's shopping bag
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: ISBN
          in: path
          description: Book ISBN
          required: true
          type: string
      responses:
        '200':
          description: Shopping bag item removed
        '400':
          description: 'invalid input, object invalid'
        '404':
          description: item not found
      x-swagger-router-controller: User
      
  # MARK: - Events
      
  '/events':
  
    get:
      tags:
        - event
      summary: Returns the presentation events of books in alphabetical order
      operationId: getEvents
      produces:
        - application/json
      parameters:
        - name: bookISBN
          in: query
          description: Pass the ISBN of the book for looking up events
          required: false
          type: string
        - name: ID
          in: query
          description: Pass an optional search string for looking up events
          required: false
          type: string
        - name: venue
          in: query
          description: Pass an optional search string for looking up events
          required: false
          type: string
        - name: address
          in: query
          description: Pass an optional search string for looking up events
          required: false
          type: string
        - name: city
          in: query
          description: Pass an optional search string for looking up events
          required: false
          type: string
        - name: page
          in: query
          description: Number of the page
          type: integer
          format: int32
          minimum: 1
        - name: limit
          in: query
          description: Maximum number of records to return in a single page
          type: integer
          format: int32
          minimum: 0
      responses:
        '200':
          description: Search results matching criteria
          schema:
            type: array
            items:
              $ref: '#/definitions/Event'
        '400':
          description: bad input parameter
      x-swagger-router-controller: Event
      
    post:
      tags:
        - event
      summary: Post a presentation event
      operationId: postEvent
      description: Post a presentation event
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: event
          in: body
          description: an Event
          schema:
            $ref: '#/definitions/Event'
      responses:
        '201':
          description: item created
        '400':
          description: 'invalid input, object invalid'
        '403':
          description: Operation not allowed
      x-swagger-router-controller: Event
      
  '/events/{ID}':
    delete:
      tags:
        - event
      summary: Delete a presentation event
      operationId: deleteEvent
      description: Delete a presentation event
      parameters:
        - name: ID
          in: path
          type: string
          required: true
      responses:
        '201':
          description: item deleted
        '400':
          description: 'invalid input, object invalid'
        '403':
          description: Operation not allowed
        '404':
          description: user not found
    x-swagger-router-controller: Event
  
  '/events/latest':
      
    get:
      tags:
        - event
      summary: Returns the presentation events in the last month
      operationId: getLatestEvents
      produces:
        - application/json
      parameters:
        - name: page
          in: query
          description: Number of the page
          type: integer
          format: int32
          minimum: 1
        - name: limit
          in: query
          description: Maximum number of records to return in a single page
          type: integer
          format: int32
          minimum: 0
      responses:
        '200':
          description: Search results matching criteria
          schema:
            type: array
            items:
              $ref: '#/definitions/Event'
        '400':
          description: bad input parameter
      x-swagger-router-controller: Event
      
      
definitions:

  Author:
    required:
      - name
      - lastName
      - bio
      - picture
    properties:
      ID:
        type: integer
      name:
        type: string
        example: "Rick"
      lastName:
        type: string
        example: "Riordan"
      bio:
        type: string
        example: "Rick Riordan is the #1 New York Times bestselling author of the Percy Jackson and the Olympians series, the Kane Chronicles, and the Heroes of Olympus. He is also the author of the multi-award-winning Tres Navarre mystery series for adults. For fifteen years, Rick taught English and history at public and private middle schools in the San Francisco Bay Area and in Texas. In 2002, Saint Mary's Hall honored him with the school's first Master Teacher Award. While teaching full time, Riordan began writing mystery novels for grownups. His Tres Navarre series went on to win the top three national awards in the mystery genre - the Edgar, the Anthony and the Shamus. Riordan turned to children's fiction when he started The Lightning Thief as a bedtime story for his oldest son."
      picture:
        type: string
        format: URL
        example: "https://s3.eu-west-3.amazonaws.com/bookstore-hypermedia-be/Images/Authors/PercyAuthor.jpg"
        
  Book:
    title: Book
    description: A book for sale on the e-commerce
    type: object
    required:
      - ISBN
      - title
      - genre
      - picture
      - abstract
      - releaseDate
      - factSheet
      - theme
      - price
      - interview
    properties:
      authors:
        type: array
        items:
          type: integer
          description: Author IDs
        example: [20,22]
      ISBN:
        type: string
        format: uuid
        example: "978-1423103349"
      title:
        type: string
        example: "Percy Jackson and the Sea of Monsters"
      genre:
        type: string
        format: Genre-enum
        example: "Fantasy"
        enum:
          - Action and adventure
          - Alternate history
          - Anthology
          - Art
          - Autobiography
          - Biography
          - Book review
          - Chick lit
          - Children's literature
          - Cookbook
          - Comic book
          - Coming-of-age
          - Crime
          - Diary
          - Dictionary
          - Drama
          - Encyclopedia
          - Fairytale
          - Fantasy
          - Guide
          - Graphic novel
          - Health
          - History
          - Historical fiction
          - Horror
          - Journal
          - Math
          - Memoir
          - Mystery
          - Paranormal romance
          - Picture book
          - Poetry
          - Political thriller
          - Prayer
          - 'Religion, spirituality, and new age'
          - Review
          - Romance
          - Satire
          - Science
          - Science fiction
          - Self help
          - Short story
          - Suspense
          - Thriller
          - Travel
          - True crime
          - Young adult
      picture:
        type: string
        format: "https://s3.eu-west-3.amazonaws.com/bookstore-hypermedia-be/Images/Books/PercyJackson.jpg"
      abstract:
        type: string
        example: "After a summer spent trying to prevent a catastrophic war among the Greek gods, Percy Jackson finds his seventh-grade school year unnervingly quiet. His biggest problem is dealing with his new friend, Tyson-a six-foot-three, mentally challenged homeless kid who follows Percy everywhere, making it hard for Percy to have any 'normal' friends.\n\nBut things don't stay quiet for long. Percy soon discovers there is trouble at Camp Half-Blood: the magical borders which protect Half-Blood Hill have been poisoned by a mysterious enemy, and the only safe haven for demigods is on the verge of being overrun by mythological monsters. To save the camp, Percy needs the help of his best friend, Grover, who has been taken prisoner by the Cyclops Polyphemus on an island somewhere in the Sea of Monsters, the dangerous waters Greek heroes have sailed for millennia-only today, the Sea of Monsters goes by a new name?the Bermuda Triangle.\n\nNow Percy and his friends-Grover, Annabeth, and Tyson-must retrieve the Golden Fleece from the Island of the Cyclopes by the end of the summer or Camp Half-Blood will be destroyed. But first, Percy will learn a stunning new secret about his family-one that makes him question whether being claimed as Poseidon's son is an honor or simply a cruel joke."
      releaseDate:
        type: string
        format: date
        example: "2007-04-01"
      factSheet:
        type: string
        example: "Age Range: 10 - 14 years\nSeries: Percy Jackson and the Olympians (Book 2)\nPaperback: 320 pages\nPublisher: Disney-Hyperion; Reprint edition (April 1, 2007)\nLanguage: English\nISBN-10: 1423103343\nISBN-13: 978-1423103349"
      soldCopies:
        type: integer
        example: 0
      theme:
        type: string
        format: Theme-enum
        example: "Good vs Evil"
        enum:
          - Love
          - Death
          - Good vs Evil
          - Coming of Age
          - Power and Corruption
          - Survival
          - Courage and Heroism
          - Prejudice
          - Individual vs Society
          - War
      price:
        type: number
        example: 34.90
      interview:
        type: string
        example: "What age children did you teach?\nAll ages, but I gravitated toward kids about 11 to 14. If you are going to leave a lasting impression on children as a teacher, that is the critical time, I think.\nOne thing that struck me reading the books was that you started the series before the age of mobile technology and 24-hour distraction. Have you noticed a difference in your readers?\nWe have always been worried about things that are taking children away from reading. I’ve read newspaper articles from the 1920s going on about Dick Tracy on the radio taking kids away from books, and then it was television, and then arcade games, and now social media. I still see a huge appetite for stories. I wrote this series of books particularly for reluctant readers, but they still ask: “why was the last book only 450 pages long?”"
          
  Event:
    required:
      - B_ISBN
      - startingDate
      - endingDate
      - venue
      - address
      - city
    properties:
      ID:
        type: integer
      B_ISBN:
        type: string
        example: "978-1982110567"
      startingDate:
        type: string
        format: date
        example: "2019-06-14"
      endingDate:
        type: string
        format: date
        example: "2019-07-14"
      venue:
        type: string
        example: "Palazzo Ronaldo"
      address:
        type: string
        example: "Via Einstein"
      city:
        type: string
        example: "Napoli"
        
  Review:
    required:
      - B_ISBN
      - rating
      - description
      - date
    properties:
      ID:
        type: integer
      U_ID:
        type: integer
      B_ISBN:
        type: string
        example: "978-1524797140"
      rating:
        type: integer
        format: int32
        example: 4
      description:
        type: string
        example: "Amazing! Beautiful! Best Series Ever"
      date:
        type: string
        format: date
        example: "2019-05-15"
        
  ShoppingBag:
    required:
      - B_ISBN
      - quantity
      - version
    properties:
      U_ID:
        type: integer
        example: 13
      B_ISBN:
        type: string
        example: "978-1524797140"
      quantity:
        type: integer
        format: int32
        example: 2
      version:
        type: string
        enum:
          - DIGITAL
          - PAPER
        example: "PAPER"
        
  User:
    required:
      - email
      - name
      - lastName
    properties:
      ID:
        type: integer
      email:
        type: string
        format: email
        example: "admin@gmail.com"
      password:
        type: string
        format: password
        example: "admin"
      name:
        type: string
        example: "Mario"
      lastName:
        type: string
        example: "Rossi"
      isAdmin:
        type: boolean
        example: false
      
